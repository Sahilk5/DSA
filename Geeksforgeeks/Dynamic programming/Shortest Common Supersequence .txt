https://practice.geeksforgeeks.org/problems/shortest-common-supersequence/0/?track=SPC-DP&batchId=154

Solution - 

#include<bits/stdc++.h>
using namespace std;

void scs(string s1, string s2, int n, int m){
    int dp[n+1][m+1];
    memset(dp, 0, sizeof(dp));
    
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            if(s1[i-1] == s2[j-1]){
                dp[i][j] = 1 + dp[i-1][j-1];
            }
            else{
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    int lcs = dp[n][m];
    int ans = lcs + (n-lcs) + (m-lcs);
    cout<< ans;
}

int main()
 {
	//code
	int t;
	cin>>t;
	while(t--){
	    string s1,s2;
	    cin>>s1>>s2;
	    int n = s1.size();
	    int m = s2.size();
	    scs(s1, s2, n, m);
	    cout<<endl;
	}
	return 0;
}