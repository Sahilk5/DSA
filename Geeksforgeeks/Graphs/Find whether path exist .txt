https://practice.geeksforgeeks.org/problems/find-whether-path-exist/0/?track=SPC-Graph&batchId=154

DO WITHOUT VISITED 

Solution -

#include<iostream>
using namespace std;

int arr[20][20];
bool vis[20][20];
int si = 0, sj = 0, di = 0, dj = 0;

bool isSafe(int n , int i, int j){
    return (i >= 0 && j >= 0 && i < n && j < n && !vis[i][j] && arr[i][j] != 0);
}

bool checkPath(int n , int i, int j){
    vis[i][j] = true;
    int r[] = {1,0,-1,0};
    int c[] = {0,1,0,-1};
    if(i == di && j == dj){
        return true;
    }
    
    for(int k = 0; k < 4; k++){
        if(isSafe(n, i+r[k], j+c[k])){
            if(checkPath(n, i+r[k], j+c[k]))return true;
        }
    }
    return false;
}


int main()
 {
	//code
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    arr[n][n];
	    vis[n][n];
	    for(int i = 0; i < n; i++){
	        for(int j = 0; j < n; j++){
	            cin>>arr[i][j];
	            vis[i][j] = false;
	            if(arr[i][j] == 1){
	                si = i; sj = j;
	            }
	            if(arr[i][j] == 2){
	                di = i; dj = j;
	            }
	        }
	    }
	    cout<<checkPath(n, si, sj)<<endl;
	}
	return 0;
}