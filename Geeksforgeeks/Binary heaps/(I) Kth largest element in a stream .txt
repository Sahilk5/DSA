https://practice.geeksforgeeks.org/problems/kth-largest-element-in-a-stream-1587115620/1/?track=SPC-Heap&batchId=154

Solution -


void kthLargest(int arr[], int N, int k)
{
	// your code here
    priority_queue<int,vector<int>,greater<int>> pq; // making Minheap
	
	for(int i=0;i<N;i++)
	{
	    if(pq.size() < k) 
			pq.push(arr[i]);
		else // if size becomes equal to k
		{
			if(arr[i] > pq.top()) // if top element is smaller than arr[i]
			{
				pq.pop();
				pq.push(arr[i]);
			}
		}
		
		if(pq.size()<k)
			cout<<-1<<" ";
		else
			cout<<pq.top()<<" "; // print the current top element
	}
    
}