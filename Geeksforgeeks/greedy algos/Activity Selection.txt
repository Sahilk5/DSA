https://practice.geeksforgeeks.org/problems/activity-selection-1587115620/1/?track=SPC-Greedy&batchId=154

Solution -

bool comp(pair<int, int> p1, pair<int, int> p2){
    if(p1.second > p2.second)return false;
    if(p1.second == p2.second){
        if(p1.first > p2.first){return false;}
        else{return true;}
    }
    return true;
}

int activitySelection(int start[], int end[], int n){
    // Your code here
    vector<pair<int, int>> act;
    for(int i = 0; i < n; i++){
        act.push_back(make_pair(start[i], end[i]));
    }
    sort(act.begin(), act.end(), comp);
    int res = 1;
    int lastActivity = 0;
    for(int i = 1; i < n; i++){
        if(act[lastActivity].second <= act[i].first){
            res++;
            lastActivity = i;
        }
    }
    return res++;
}