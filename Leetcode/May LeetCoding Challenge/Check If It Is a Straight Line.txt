 Check If It Is a Straight Line
You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

 

 

Example 1:



Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 

Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.

Solution - 

class Solution:
    def checkStraightLine(self, coordinates: List[List[int]]) -> bool:
        
        if len({p[0] for p in coordinates}) == 1 or len({p[1] for p in coordinates}) == 1:
            return True
        
        x_increment = coordinates[1][0] - coordinates[0][0]
        y_increment = coordinates[1][1] - coordinates[0][1]
        if x_increment == 0 or y_increment == 0:
            first_slope = 0
        else:
            first_slope = y_increment / x_increment
        
        for i in range(len(coordinates) - 1):
            x_increment = coordinates[i+1][0] - coordinates[i][0]
            y_increment = coordinates[i+1][1] - coordinates[i][1]
            
            if x_increment == 0 or y_increment == 0:
                slope = 0
            else:
                slope = y_increment / x_increment
                
            if slope != first_slope:
                return False
            
            
        return True